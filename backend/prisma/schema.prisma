generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  productid       Int          @id @default(autoincrement())
  name            String       @db.VarChar(255)
  description     String?
  price           Decimal      @db.Decimal(10, 2)
  category        String       @db.VarChar(100)
  company         String       @db.VarChar(100)
  images          Json?
  additional_info Json?
  createdat       DateTime?    @default(now()) @db.Timestamp(6)
  updatedat       DateTime?    @default(now()) @db.Timestamp(6)
  gender          String?      @db.VarChar(30)
  cartitems       cartitems[]
  wishlists       wishlist[]
  orderitems      orderitems[]
}

model cartitems {
  cartitemid Int       @id @default(autoincrement())
  cartid     Int
  productid  Int
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  createdat  DateTime? @default(now()) @db.Timestamp(6)
  updatedat  DateTime? @default(now()) @db.Timestamp(6)
  carts      carts     @relation(fields: [cartid], references: [cartid], onDelete: Cascade, onUpdate: NoAction)
  product    product   @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction)

  @@unique([cartid, productid])
}

model carts {
  cartid    Int         @id @default(autoincrement())
  userid    Int
  createdat DateTime?   @default(now()) @db.Timestamp(6)
  updatedat DateTime?   @default(now()) @db.Timestamp(6)
  cartitems cartitems[]
  users     users       @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)

  @@index([cartid], map: "idx_cart_user")
}

model users {
  userid       Int        @id @default(autoincrement())
  username     String     @db.VarChar(100)
  password     String?    @db.VarChar(100)
  email        String?    @unique @db.VarChar(100)
  name         String?    @db.VarChar(100)
  profilephoto String?
  carts        carts[]
  wishlist     wishlist[]
  orders       orders[]
}

model wishlist {
  id        Int       @id @default(autoincrement())
  productid Int
  userid    Int
  createdat DateTime? @default(now()) @db.Timestamp(6)
  updatedat DateTime? @default(now()) @db.Timestamp(6)
  product   product   @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction, map: "fk_product")
  user      users     @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}

model orders {
  orderid     Int          @id @default(autoincrement())
  userid      Int
  totalamount Decimal      @db.Decimal(10, 2)
  status      String       @db.VarChar(20)
  createdat   DateTime     @default(now()) @db.Timestamp(6)
  updatedat   DateTime     @default(now()) @db.Timestamp(6)
  orderitems  orderitems[]
  user        users        @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}

model orderitems {
  orderitemid Int      @id @default(autoincrement())
  orderid     Int
  productid   Int
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  order       orders?  @relation(fields: [orderid], references: [orderid], onDelete: NoAction, onUpdate: NoAction, map: "fk_orderite")
  product     product? @relation(fields: [productid], references: [productid], onDelete: NoAction, onUpdate: NoAction, map: "fk_product")
}
